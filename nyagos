-- 環境変数
set {
--  EDITOR = '"D:\\Program Files\\EmEditor\\EmEditor.exe" //sp //cp 65001',
    EDITOR = '"C:\\CLI\\vim74-kaoriya-win64\\gvim.exe"',
    PROMPT = "[NYAGOS $P]"
}

-- エイリアス
alias {
    _cd  = "cd",
    cd   = "pushd",
    sudo = "elevate",
    st   = "git status"
}

-- 文字列を区切り文字で区切って配列にする関数
-- code from 'http://lua-users.org/wiki/SplitJoin'
string.split = function (str, pat)
    local t = {}
    local fpat = "(.-)"..pat
    local last_end = 1
    local s, e, cap = str:find(fpat, 1)
    while s do
        if s ~= 1 or cap ~= "" then
            table.insert(t,cap)
        end
        last_end = e+1
        s, e, cap = str:find(fpat, last_end)
    end
    if last_end <= #str then
        cap = str:sub(last_end)
        table.insert(t, cap)
    end
    return t
end

-- `string.split` を `share` に入れる
share.split = string.split

-- ターミナルの文字色を変更するためのエスケープシーケンス
share.colors = {
    black   = "\x1b[30m",
    red     = "\x1b[31m",
    green   = "\x1b[32m",
    yellow  = "\x1b[33m",
    blue    = "\x1b[34m",
    magenta = "\x1b[35m",
    cyan    = "\x1b[36m",
    white   = "\x1b[37m",
    reset   = "\x1b[0m"
}

-- ブランチ名を取得する関数
share.get_current_brunch = function()
    local gs = {}
    local color = {}

    string.split = share.split

    gs.is_inside_work_tree = (nyagos.eval("git rev-parse --is-inside-work-tree 2>nul") == "true")

    if not gs.is_inside_work_tree then
        return ""
    end

    gs.branch_name = nyagos.eval("git rev-parse --abbrev-ref HEAD 2>nul")

    local status = nyagos.eval("git status --porcelain --branch 2>nul")
    local lines = status:split("\n")

    gs.modified  = false
    gs.added     = false
    gs.untracked = false

    for i, line in ipairs(lines) do
        -- ^ M ==
        if line:match("^ M%s+(.*)") then
            gs.modified = true
        -- ^A  ==
        elseif line:match("^A.%s+(.*)") then
            gs.added = true
        -- ^MM ==
        elseif line:match("^M.%s+(.*)") then
            gs.added = true
        -- ^?? ==
        elseif line:match("^%?%?%s+(.*)") then
            gs.untracked = true
        end
    end

    if gs.modified then
        color = "red"
    elseif gs.added then
        color = "yellow"
    elseif gs.untracked then
        color = "green"
    else
        color = "cyan"
    end

    return "(" .. share.colors[color] .. gs.branch_name .. share.colors.reset .. ")"
end

-- プロンプトを作成する関数を変更
share.prompter = nyagos.prompt
nyagos.prompt = function(this)
    local branch = share.get_current_brunch()
    local prompt = share.colors.magenta .. this .. share.colors.reset .. branch .. "$_$$$S"
    return share.prompter(prompt)
end
